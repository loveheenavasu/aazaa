<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class PageContent extends \App\Entity\PageContent implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'template', '' . "\0" . 'App\\Entity\\PageContent' . "\0" . 'active', '' . "\0" . 'App\\Entity\\PageContent' . "\0" . 'paid', '' . "\0" . 'App\\Entity\\PageContent' . "\0" . 'accountRequired', '' . "\0" . 'App\\Entity\\PageContent' . "\0" . 'vimeoId', 'pageContentRelations', '' . "\0" . 'App\\Entity\\PageContent' . "\0" . 'title', '' . "\0" . 'App\\Entity\\PageContent' . "\0" . 'metaTitle', '' . "\0" . 'App\\Entity\\PageContent' . "\0" . 'metaDescription', '' . "\0" . 'App\\Entity\\PageContent' . "\0" . 'shortDescription', '' . "\0" . 'App\\Entity\\PageContent' . "\0" . 'previewTop', '' . "\0" . 'App\\Entity\\PageContent' . "\0" . 'previewBottom', '' . "\0" . 'App\\Entity\\PageContent' . "\0" . 'content', '' . "\0" . 'App\\Entity\\PageContent' . "\0" . 'category', '' . "\0" . 'App\\Entity\\PageContent' . "\0" . 'watchLog', '' . "\0" . 'App\\Entity\\PageContent' . "\0" . 'favorites', '' . "\0" . 'App\\Entity\\PageContent' . "\0" . 'slug', '' . "\0" . 'App\\Entity\\PageContent' . "\0" . 'path', '' . "\0" . 'App\\Entity\\PageContent' . "\0" . 'created', '' . "\0" . 'App\\Entity\\PageContent' . "\0" . 'updated'];
        }

        return ['__isInitialized__', 'id', 'template', '' . "\0" . 'App\\Entity\\PageContent' . "\0" . 'active', '' . "\0" . 'App\\Entity\\PageContent' . "\0" . 'paid', '' . "\0" . 'App\\Entity\\PageContent' . "\0" . 'accountRequired', '' . "\0" . 'App\\Entity\\PageContent' . "\0" . 'vimeoId', 'pageContentRelations', '' . "\0" . 'App\\Entity\\PageContent' . "\0" . 'title', '' . "\0" . 'App\\Entity\\PageContent' . "\0" . 'metaTitle', '' . "\0" . 'App\\Entity\\PageContent' . "\0" . 'metaDescription', '' . "\0" . 'App\\Entity\\PageContent' . "\0" . 'shortDescription', '' . "\0" . 'App\\Entity\\PageContent' . "\0" . 'previewTop', '' . "\0" . 'App\\Entity\\PageContent' . "\0" . 'previewBottom', '' . "\0" . 'App\\Entity\\PageContent' . "\0" . 'content', '' . "\0" . 'App\\Entity\\PageContent' . "\0" . 'category', '' . "\0" . 'App\\Entity\\PageContent' . "\0" . 'watchLog', '' . "\0" . 'App\\Entity\\PageContent' . "\0" . 'favorites', '' . "\0" . 'App\\Entity\\PageContent' . "\0" . 'slug', '' . "\0" . 'App\\Entity\\PageContent' . "\0" . 'path', '' . "\0" . 'App\\Entity\\PageContent' . "\0" . 'created', '' . "\0" . 'App\\Entity\\PageContent' . "\0" . 'updated'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (PageContent $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getTemplate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTemplate', []);

        return parent::getTemplate();
    }

    /**
     * {@inheritDoc}
     */
    public function setTemplate($template)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTemplate', [$template]);

        return parent::setTemplate($template);
    }

    /**
     * {@inheritDoc}
     */
    public function getActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', []);

        return parent::getActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', [$active]);

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getPaid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPaid', []);

        return parent::getPaid();
    }

    /**
     * {@inheritDoc}
     */
    public function setPaid($paid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPaid', [$paid]);

        return parent::setPaid($paid);
    }

    /**
     * {@inheritDoc}
     */
    public function getAccountRequired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccountRequired', []);

        return parent::getAccountRequired();
    }

    /**
     * {@inheritDoc}
     */
    public function setAccountRequired($accountRequired)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAccountRequired', [$accountRequired]);

        return parent::setAccountRequired($accountRequired);
    }

    /**
     * {@inheritDoc}
     */
    public function getVimeoId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVimeoId', []);

        return parent::getVimeoId();
    }

    /**
     * {@inheritDoc}
     */
    public function setVimeoId($vimeoId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVimeoId', [$vimeoId]);

        return parent::setVimeoId($vimeoId);
    }

    /**
     * {@inheritDoc}
     */
    public function getPageContentRelations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPageContentRelations', []);

        return parent::getPageContentRelations();
    }

    /**
     * {@inheritDoc}
     */
    public function setPageContentRelations($pageContentRelations)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPageContentRelations', [$pageContentRelations]);

        return parent::setPageContentRelations($pageContentRelations);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaDescription', []);

        return parent::getMetaDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setMetaDescription($metaDescription)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetaDescription', [$metaDescription]);

        return parent::setMetaDescription($metaDescription);
    }

    /**
     * {@inheritDoc}
     */
    public function getShortDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShortDescription', []);

        return parent::getShortDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setShortDescription($shortDescription)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShortDescription', [$shortDescription]);

        return parent::setShortDescription($shortDescription);
    }

    /**
     * {@inheritDoc}
     */
    public function getContent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContent', []);

        return parent::getContent();
    }

    /**
     * {@inheritDoc}
     */
    public function setContent($content)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContent', [$content]);

        return parent::setContent($content);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategory', []);

        return parent::getCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategory($category)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategory', [$category]);

        return parent::setCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function getWatchLog()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWatchLog', []);

        return parent::getWatchLog();
    }

    /**
     * {@inheritDoc}
     */
    public function setWatchLog($watchLog)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWatchLog', [$watchLog]);

        return parent::setWatchLog($watchLog);
    }

    /**
     * {@inheritDoc}
     */
    public function getFavorites()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFavorites', []);

        return parent::getFavorites();
    }

    /**
     * {@inheritDoc}
     */
    public function setFavorites($favorites)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFavorites', [$favorites]);

        return parent::setFavorites($favorites);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlug()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlug', []);

        return parent::getSlug();
    }

    /**
     * {@inheritDoc}
     */
    public function setSlug($slug)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSlug', [$slug]);

        return parent::setSlug($slug);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreated', []);

        return parent::getCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreated($created)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreated', [$created]);

        return parent::setCreated($created);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdated', []);

        return parent::getUpdated();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdated($updated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdated', [$updated]);

        return parent::setUpdated($updated);
    }

    /**
     * {@inheritDoc}
     */
    public function getPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPath', []);

        return parent::getPath();
    }

    /**
     * {@inheritDoc}
     */
    public function setPath($path)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPath', [$path]);

        return parent::setPath($path);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaTitle', []);

        return parent::getMetaTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setMetaTitle($metaTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetaTitle', [$metaTitle]);

        return parent::setMetaTitle($metaTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getPreviewTop()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPreviewTop', []);

        return parent::getPreviewTop();
    }

    /**
     * {@inheritDoc}
     */
    public function setPreviewTop($previewTop)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPreviewTop', [$previewTop]);

        return parent::setPreviewTop($previewTop);
    }

    /**
     * {@inheritDoc}
     */
    public function getPreviewBottom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPreviewBottom', []);

        return parent::getPreviewBottom();
    }

    /**
     * {@inheritDoc}
     */
    public function setPreviewBottom($previewBottom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPreviewBottom', [$previewBottom]);

        return parent::setPreviewBottom($previewBottom);
    }

}
